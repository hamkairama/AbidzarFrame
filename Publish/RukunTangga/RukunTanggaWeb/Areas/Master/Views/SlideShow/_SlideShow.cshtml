@model AbidzarFrame.Master.Interface.Dto.SlideShowResult
@using AbidzarFrame.Web.Helpers

@{
    Layout = null;
}
<link href="~/Content/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />

@Html.AntiForgeryToken()
@Html.Hidden("hiddenActionGrid", (object)ViewBag.ActionGrid)

<form id="FormObject">
    <fieldset>
        <div class="col-md-12">
            @{
                if ((object)ViewBag.ActionGrid == "Edit")
                {
                    <div class="row hidden">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })
                        </div>
                    </div>
                }
            }
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Judul)
                    @Html.TextBoxFor(m => m.Judul, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })
                    @Html.ValidationMessageFor(m => m.Judul, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Deskripsi)
                    @Html.TextBoxFor(m => m.Deskripsi, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })
                    @Html.ValidationMessageFor(m => m.Deskripsi, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group ">
                    <label class="control-label col-md-3">Pilih Gambar</label>
                    <div class="col-md-9">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-preview thumbnail" style="width: 200px; height: 150px; line-height: 150px;" data-trigger="fileinput"></div>
                            <div>
                                <span class="btn default btn-file">
                                    <span class="fileinput-new">
                                        Select image
                                    </span>
                                    <span class="fileinput-exists">
                                        Change
                                    </span>
                                    <input name="..." type="hidden" value=""><input type="file" id="fileSelected" name="photos[]" multiple />
                                </span>
                                <a class="btn red fileinput-exists" href="javascript:;" data-dismiss="fileinput">
                                    Remove
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Tipe)
                    @Html.DropDownListFor(m => m.Tipe, new SelectList(ViewBag.TipeSlideShow, "Value", "Text"), "", new { @class = "selectpicker show-tick form-control" })
                    @*@Html.TextBoxFor(m => m.Tipe, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })*@
                    @Html.ValidationMessageFor(m => m.Tipe, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Posisi)
                    @Html.DropDownListFor(m => m.Posisi, new SelectList(ViewBag.Posisi, "Value", "Text"), "", new { @class = "selectpicker show-tick form-control" })
                    @*@Html.TextBoxFor(m => m.Posisi, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })*@
                    @Html.ValidationMessageFor(m => m.Posisi, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.PathUrl)
                    @Html.TextBoxFor(m => m.PathUrl, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })
                    @Html.ValidationMessageFor(m => m.PathUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (CurrentUser.GetCurrentRole() == "SA")
            {
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.KodeRt)
                        @Html.TextBoxFor(m => m.KodeRt, new { @class = "form-control", @style = "width:100%", @maxlength = "50" })
                        @Html.ValidationMessageFor(m => m.KodeRt, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </div>

    </fieldset>
</form>
<script>
    $(document).ready(function () {
        //Reference : https://silviomoreto.github.io/bootstrap-select/options/
        $('.selectpicker').selectpicker({
            liveSearch: true,
            size: 5,
            showSubtext: true
        });

        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {
            $('.selectpicker').selectpicker('mobile');
        }
    })
</script>
<script src="~/Content/plugins/bootstrap-fileinput/bootstrap-fileinput.js"></script>
